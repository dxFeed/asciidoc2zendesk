<?xml version="1.0" encoding="UTF-8"?>
<meta-runner name="[Zendesk] Asciidoc Convert &amp; Publish">
    <description>convert and publish to zendesk documentation from assigned VCS</description>
    <settings>
        <parameters>
            <param name="env.URL" value="" />
            <param name="env.USER" value="" />
            <param name="env.TOKEN" value="" spec="password display='normal'" />
            <param name="env.CLEAN" value="" spec="checkbox display='normal' checkedValue='yes'" />
            <param name="env.PUBLISH" value="" spec="checkbox display='normal' checkedValue='yes'" />
            <param name="env.DIR" value="" />
            <param name="env.FILE" value="" />
            <param name="env.GROUP" value="" />
            <param name="env.LOGLEVEL" value="" spec="select display='normal' data_2='INFO' data_1='WARN' data_3='TRACE'" />
        </parameters>
        <build-runners>
            <runner name="Download" type="simpleRunner">
                <parameters>
                    <param name="script.content"><![CDATA[
URL="$(curl -s https://api.github.com/repos/mvkvl/asciidoc2zendesk/releases/latest | grep -E "browser_download_url.*[0-9].[0-9].[0-9].tar.gz" | cut -d : -f 2,3 | tr -d \")"
curl -s -L --url $URL | tar xvz
]]></param>
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Run (1)" type="simpleRunner">
                <parameters>
                    <param name="script.content"><![CDATA[#!/usr/bin/env bash

function process_directory() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        --dir="$1"                   \
        $FLAGS
}
function process_file() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        --file="$1"                  \
        $FLAGS
}
function simple_run() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        $FLAGS
}

# check mandatory arguments
if [ -z "$URL" ]; then
  echo "error: URL not set"
  exit 1
fi
if [ -z "$USER" ]; then
  echo "error: USER not set"
  exit 2
fi
if [ -z "$TOKEN" ]; then
  echo "error: TOKEN not set"
  exit 3
fi

# set run arguments
FLAGS=""

if [ -n "$LOGLEVEL" ]; then
    export LOGLEVEL=$LOGLEVEL
else
    export LOGLEVEL=INFO
fi

if [ -n "$CLEAN" ]; then
   FLAGS="$FLAGS --delete-all"
fi

if [ -n "$GROUP" ]; then
   FLAGS="$FLAGS --group=$GROUP"
fi

echo $FLAGS --file="$FILE" --dir="$DIR" --user=$USER --token=$TOKEN --url=$URL --group=$GROUP

if [ $PUBLISH ]; then
    if [ -n "$DIR" ]; then
       process_directory "$DIR"
    elif [ -n "$FILE" ]; then
       process_file "$FILE"
    else
       simple_run
    fi
else
    simple_run
fi]]></param>
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Run (2)" type="simpleRunner">
                <parameters>
                    <param name="script.content"><![CDATA[#!/usr/bin/env bash

function process_directory() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        --dir="$1"                   \
        $FLAGS
}
function process_file() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        --file="$1"                  \
        $FLAGS
}
function simple_run() {
   java -jar asciidoc2zendesk.jar    \
        --url=$URL --user=$USER      \
        --token=$TOKEN               \
        $FLAGS
}

# check mandatory arguments
if [ -z "$URL" ]; then
  echo "error: URL not set"
  exit 1
fi
if [ -z "$USER" ]; then
  echo "error: USER not set"
  exit 2
fi
if [ -z "$TOKEN" ]; then
  echo "error: TOKEN not set"
  exit 3
fi

# set run arguments
FLAGS=""

if [ -n "$LOGLEVEL" ]; then
    export LOGLEVEL=$LOGLEVEL
else
    export LOGLEVEL=INFO
fi

if [ -n "$CLEAN" ]; then
   FLAGS="$FLAGS --delete-all"
fi

if [ -n "$GROUP" ]; then
   FLAGS="$FLAGS --group=$GROUP"
fi

echo $FLAGS --file="$FILE" --dir="$DIR" --user=$USER --token=$TOKEN --url=$URL --group=$GROUP

if [ $PUBLISH ]; then
    if [ -n "$DIR" ]; then
       process_directory "$DIR"
    elif [ -n "$FILE" ]; then
       process_file "$FILE"
    else
       simple_run
    fi
else
    simple_run
fi]]></param>
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Show Log" type="simpleRunner">
                <parameters>
                    <param name="script.content" value="cat *.log" />
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Cleanup" type="simpleRunner">
                <parameters>
                    <param name="script.content" value="rm -rf *" />
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
        </build-runners>
        <requirements />
    </settings>
</meta-runner>


